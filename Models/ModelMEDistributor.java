/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2017
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 08/05/2015 7:22:37 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.ChromatiCraft.Models;

import java.util.ArrayList;

import org.lwjgl.opengl.GL11;

import net.minecraft.tileentity.TileEntity;

import Reika.ChromatiCraft.Base.ChromaModelBase;
import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;

public class ModelMEDistributor extends ChromaModelBase
{
	//fields
	LODModelPart Shape1;
	LODModelPart Shape2;
	LODModelPart Shape2a;
	LODModelPart Shape2b;
	LODModelPart Shape2c;
	LODModelPart Shape3;
	LODModelPart Shape3a;
	LODModelPart Shape3b;
	LODModelPart Shape3c;
	LODModelPart Shape4;
	LODModelPart Shape4a;
	LODModelPart Shape4b;
	LODModelPart Shape4c;
	LODModelPart Shape4d;
	LODModelPart Shape4e;
	LODModelPart Shape4f;
	LODModelPart Shape4g;
	LODModelPart Shape5;
	LODModelPart Shape5a;
	LODModelPart Shape5b;
	LODModelPart Shape3d;
	LODModelPart Shape3e;
	LODModelPart Shape3f;
	LODModelPart Shape3g;

	public ModelMEDistributor()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new LODModelPart(this, 33, 0);
		Shape1.addBox(0F, 0F, 0F, 8, 1, 8);
		Shape1.setRotationPoint(-4F, 8F, -4F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new LODModelPart(this, 0, 18);
		Shape2.addBox(0F, 0F, 0F, 1, 26, 1);
		Shape2.setRotationPoint(7.5F, 14F, 7.5F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape2a = new LODModelPart(this, 15, 18);
		Shape2a.addBox(0F, 0F, 0F, 1, 26, 1);
		Shape2a.setRotationPoint(-8.5F, 14F, 7.5F);
		Shape2a.setTextureSize(128, 128);
		Shape2a.mirror = true;
		this.setRotation(Shape2a, 0F, 0F, 0F);
		Shape2b = new LODModelPart(this, 10, 18);
		Shape2b.addBox(0F, 0F, 0F, 1, 26, 1);
		Shape2b.setRotationPoint(7.5F, 14F, -8.5F);
		Shape2b.setTextureSize(128, 128);
		Shape2b.mirror = true;
		this.setRotation(Shape2b, 0F, 0F, 0F);
		Shape2c = new LODModelPart(this, 5, 18);
		Shape2c.addBox(0F, 0F, 0F, 1, 26, 1);
		Shape2c.setRotationPoint(-8.5F, 14F, -8.5F);
		Shape2c.setTextureSize(128, 128);
		Shape2c.mirror = true;
		this.setRotation(Shape2c, 0F, 0F, 0F);
		Shape3 = new LODModelPart(this, 0, 71);
		Shape3.addBox(0F, 0F, 0F, 15, 1, 1);
		Shape3.setRotationPoint(-7.5F, 23.5F, 7.5F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape3a = new LODModelPart(this, 66, 79);
		Shape3a.addBox(0F, 0F, 0F, 1, 1, 15);
		Shape3a.setRotationPoint(7.5F, 23.5F, -7.5F);
		Shape3a.setTextureSize(128, 128);
		Shape3a.mirror = true;
		this.setRotation(Shape3a, 0F, 0F, 0F);
		Shape3b = new LODModelPart(this, 0, 75);
		Shape3b.addBox(0F, 0F, 0F, 15, 1, 1);
		Shape3b.setRotationPoint(-7.5F, 23.5F, -8.5F);
		Shape3b.setTextureSize(128, 128);
		Shape3b.mirror = true;
		this.setRotation(Shape3b, 0F, 0F, 0F);
		Shape3c = new LODModelPart(this, 95, 62);
		Shape3c.addBox(0F, 0F, 0F, 1, 1, 15);
		Shape3c.setRotationPoint(-8.5F, 23.5F, -7.5F);
		Shape3c.setTextureSize(128, 128);
		Shape3c.mirror = true;
		this.setRotation(Shape3c, 0F, 0F, 0F);
		Shape4 = new LODModelPart(this, 12, 4);
		Shape4.addBox(4.5F, 0F, -0.5F, 4, 1, 1);
		Shape4.setRotationPoint(0F, 8.1F, 0F);
		Shape4.setTextureSize(128, 128);
		Shape4.mirror = true;
		this.setRotation(Shape4, 0F, -2.356194F, 0F);
		Shape4a = new LODModelPart(this, 0, 47);
		Shape4a.addBox(4.4F, -7.3F, -0.5F, 7, 1, 1);
		Shape4a.setRotationPoint(0F, 7.7F, 0F);
		Shape4a.setTextureSize(128, 128);
		Shape4a.mirror = true;
		this.setRotation(Shape4a, 0F, 0, 1.082104F);
		Shape4b = new LODModelPart(this, 0, 0);
		Shape4b.addBox(4.5F, 0F, -0.5F, 4, 1, 1);
		Shape4b.setRotationPoint(0F, 8.1F, 0F);
		Shape4b.setTextureSize(128, 128);
		Shape4b.mirror = true;
		this.setRotation(Shape4b, 0F, -0.7853982F, 0F);
		Shape4c = new LODModelPart(this, 12, 0);
		Shape4c.addBox(4.5F, 0F, -0.5F, 4, 1, 1);
		Shape4c.setRotationPoint(0F, 8.1F, 0F);
		Shape4c.setTextureSize(128, 128);
		Shape4c.mirror = true;
		this.setRotation(Shape4c, 0F, 0.7853982F, 0F);
		Shape4d = new LODModelPart(this, 0, 4);
		Shape4d.addBox(4.5F, 0F, -0.5F, 4, 1, 1);
		Shape4d.setRotationPoint(0F, 8.1F, 0F);
		Shape4d.setTextureSize(128, 128);
		Shape4d.mirror = true;
		this.setRotation(Shape4d, 0F, 2.356194F, 0F);
		Shape4e = new LODModelPart(this, 0, 55);
		Shape4e.addBox(4.4F, -7.3F, -0.5F, 7, 1, 1);
		Shape4e.setRotationPoint(0F, 7.7F, 0F);
		Shape4e.setTextureSize(128, 128);
		Shape4e.mirror = true;
		this.setRotation(Shape4e, 0F, 0, 1.082104F);
		Shape4f = new LODModelPart(this, 0, 59);
		Shape4f.addBox(4.4F, -7.3F, -0.5F, 7, 1, 1);
		Shape4f.setRotationPoint(0F, 7.7F, 0F);
		Shape4f.setTextureSize(128, 128);
		Shape4f.mirror = true;
		this.setRotation(Shape4f, 0F, 0, 1.082104F);
		Shape4g = new LODModelPart(this, 0, 51);
		Shape4g.addBox(4.4F, -7.3F, -0.5F, 7, 1, 1);
		Shape4g.setRotationPoint(0F, 7.7F, 0F);
		Shape4g.setTextureSize(128, 128);
		Shape4g.mirror = true;
		this.setRotation(Shape4g, 0F, 0, 1.082104F);
		Shape5 = new LODModelPart(this, 66, 0);
		Shape5.addBox(0F, 0F, 0F, 6, 1, 6);
		Shape5.setRotationPoint(-3F, 8.2F, -3F);
		Shape5.setTextureSize(128, 128);
		Shape5.mirror = true;
		this.setRotation(Shape5, 0F, 0F, 0F);
		Shape5a = new LODModelPart(this, 108, 0);
		Shape5a.addBox(0F, 0F, 0F, 2, 1, 2);
		Shape5a.setRotationPoint(-1F, 8.8F, -1F);
		Shape5a.setTextureSize(128, 128);
		Shape5a.mirror = true;
		this.setRotation(Shape5a, 0F, 0F, 0F);
		Shape5b = new LODModelPart(this, 91, 0);
		Shape5b.addBox(0F, 0F, 0F, 4, 1, 4);
		Shape5b.setRotationPoint(-2F, 8.5F, -2F);
		Shape5b.setTextureSize(128, 128);
		Shape5b.mirror = true;
		this.setRotation(Shape5b, 0F, 0F, 0F);
		Shape3d = new LODModelPart(this, 0, 63);
		Shape3d.addBox(0F, 0F, 0F, 15, 1, 1);
		Shape3d.setRotationPoint(-7.5F, 14F, 7.5F);
		Shape3d.setTextureSize(128, 128);
		Shape3d.mirror = true;
		this.setRotation(Shape3d, 0F, 0F, 0F);
		Shape3e = new LODModelPart(this, 33, 79);
		Shape3e.addBox(0F, 0F, 0F, 1, 1, 15);
		Shape3e.setRotationPoint(-8.5F, 14F, -7.5F);
		Shape3e.setTextureSize(128, 128);
		Shape3e.mirror = true;
		this.setRotation(Shape3e, 0F, 0F, 0F);
		Shape3f = new LODModelPart(this, 0, 79);
		Shape3f.addBox(0F, 0F, 0F, 1, 1, 15);
		Shape3f.setRotationPoint(7.5F, 14F, -7.5F);
		Shape3f.setTextureSize(128, 128);
		Shape3f.mirror = true;
		this.setRotation(Shape3f, 0F, 0F, 0F);
		Shape3g = new LODModelPart(this, 0, 67);
		Shape3g.addBox(0F, 0F, 0F, 15, 1, 1);
		Shape3g.setRotationPoint(-7.5F, 14F, -8.5F);
		Shape3g.setTextureSize(128, 128);
		Shape3g.mirror = true;
		this.setRotation(Shape3g, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(TileEntity te, ArrayList li)
	{
		Shape1.render(te, f5);
		Shape3.render(te, f5);
		Shape3a.render(te, f5);
		Shape3b.render(te, f5);
		Shape3c.render(te, f5);
		Shape4.render(te, f5);
		Shape4b.render(te, f5);
		Shape4c.render(te, f5);
		Shape4d.render(te, f5);
		Shape5.render(te, f5);
		Shape5a.render(te, f5);
		Shape5b.render(te, f5);
		Shape3d.render(te, f5);
		Shape3e.render(te, f5);
		Shape3f.render(te, f5);
		Shape3g.render(te, f5);

		boolean world = (Boolean)li.get(0);

		GL11.glPushMatrix();
		if (world) {

		}
		else {
			GL11.glTranslated(0, 0.6, 0);
			GL11.glScaled(1, 0.375, 1);
		}
		Shape2.render(te, f5);
		Shape2a.render(te, f5);
		Shape2b.render(te, f5);
		Shape2c.render(te, f5);
		GL11.glPopMatrix();

		GL11.glPushMatrix();
		GL11.glRotated(45, 0, 1, 0);
		Shape4a.render(te, f5);
		GL11.glRotated(90, 0, 1, 0);
		Shape4e.render(te, f5);
		GL11.glRotated(90, 0, 1, 0);
		Shape4f.render(te, f5);
		GL11.glRotated(90, 0, 1, 0);
		Shape4g.render(te, f5);
		GL11.glPopMatrix();
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5);
	}

}
