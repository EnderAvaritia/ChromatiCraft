/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2017
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 09/11/2014 3:29:54 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.ChromatiCraft.Models;

import java.util.ArrayList;

import net.minecraft.tileentity.TileEntity;

import Reika.ChromatiCraft.Base.ChromaModelBase;
import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;

public class ModelAspectFormer extends ChromaModelBase
{
	//fields
	LODModelPart Shape1;
	LODModelPart Shape1a;
	LODModelPart Shape1b;
	LODModelPart Shape1d;
	LODModelPart Shape1c;
	LODModelPart Shape1e;
	LODModelPart Shape1f;
	LODModelPart Shape1g;
	LODModelPart Shape1h;
	LODModelPart Shape1i;
	LODModelPart Shape1j;
	LODModelPart Shape1k;
	LODModelPart Shape2;
	LODModelPart Shape3;
	LODModelPart Shape3a;
	LODModelPart Shape3b;
	LODModelPart Shape3c;
	LODModelPart Shape3d;
	LODModelPart Shape3e;
	LODModelPart Shape3f;
	LODModelPart Shape3g;
	LODModelPart Shape4;
	LODModelPart Shape4a;
	LODModelPart Shape4b;
	LODModelPart Shape4c;
	LODModelPart Shape4d;
	LODModelPart Shape4e;
	LODModelPart Shape4f;
	LODModelPart Shape4g;
	LODModelPart Shape4h;
	LODModelPart Shape4i;
	LODModelPart Shape4j;
	LODModelPart Shape4k;
	LODModelPart Shape4l;
	LODModelPart Shape4m;
	LODModelPart Shape4n;
	LODModelPart Shape4o;
	LODModelPart Shape4p;
	LODModelPart Shape4q;
	LODModelPart Shape4r;
	LODModelPart Shape4s;
	LODModelPart Shape4t;
	LODModelPart Shape4u;
	LODModelPart Shape4v;
	LODModelPart Shape4w;
	LODModelPart Shape4x;
	LODModelPart Shape4y;
	LODModelPart Shape4z;
	LODModelPart Shape4aa;
	LODModelPart Shape4ab;
	LODModelPart Shape4ac;
	LODModelPart Shape4ad;
	LODModelPart Shape4ae;

	public ModelAspectFormer()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new LODModelPart(this, 9, 0);
		Shape1.addBox(0F, 0F, 0F, 2, 10, 2);
		Shape1.setRotationPoint(-8F, 30F, 6F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape1a = new LODModelPart(this, 0, 22);
		Shape1a.addBox(0F, 0F, 0F, 4, 4, 4);
		Shape1a.setRotationPoint(4F, 26F, -8F);
		Shape1a.setTextureSize(128, 128);
		Shape1a.mirror = true;
		this.setRotation(Shape1a, 0F, 0F, 0F);
		Shape1b = new LODModelPart(this, 27, 0);
		Shape1b.addBox(0F, 0F, 0F, 2, 10, 2);
		Shape1b.setRotationPoint(6F, 30F, -8F);
		Shape1b.setTextureSize(128, 128);
		Shape1b.mirror = true;
		this.setRotation(Shape1b, 0F, 0F, 0F);
		Shape1d = new LODModelPart(this, 18, 0);
		Shape1d.addBox(0F, 0F, 0F, 2, 10, 2);
		Shape1d.setRotationPoint(6F, 30F, 6F);
		Shape1d.setTextureSize(128, 128);
		Shape1d.mirror = true;
		this.setRotation(Shape1d, 0F, 0F, 0F);
		Shape1c = new LODModelPart(this, 0, 0);
		Shape1c.addBox(0F, 0F, 0F, 2, 10, 2);
		Shape1c.setRotationPoint(-8F, 30F, -8F);
		Shape1c.setTextureSize(128, 128);
		Shape1c.mirror = true;
		this.setRotation(Shape1c, 0F, 0F, 0F);
		Shape1e = new LODModelPart(this, 17, 22);
		Shape1e.addBox(0F, 0F, 0F, 4, 4, 4);
		Shape1e.setRotationPoint(4F, 26F, 4F);
		Shape1e.setTextureSize(128, 128);
		Shape1e.mirror = true;
		this.setRotation(Shape1e, 0F, 0F, 0F);
		Shape1f = new LODModelPart(this, 36, 27);
		Shape1f.addBox(0F, 0F, 0F, 6, 2, 6);
		Shape1f.setRotationPoint(-8F, 24F, 2F);
		Shape1f.setTextureSize(128, 128);
		Shape1f.mirror = true;
		this.setRotation(Shape1f, 0F, 0F, 0F);
		Shape1g = new LODModelPart(this, 17, 13);
		Shape1g.addBox(0F, 0F, 0F, 4, 4, 4);
		Shape1g.setRotationPoint(-8F, 26F, 4F);
		Shape1g.setTextureSize(128, 128);
		Shape1g.mirror = true;
		this.setRotation(Shape1g, 0F, 0F, 0F);
		Shape1h = new LODModelPart(this, 0, 13);
		Shape1h.addBox(0F, 0F, 0F, 4, 4, 4);
		Shape1h.setRotationPoint(-8F, 26F, -8F);
		Shape1h.setTextureSize(128, 128);
		Shape1h.mirror = true;
		this.setRotation(Shape1h, 0F, 0F, 0F);
		Shape1i = new LODModelPart(this, 36, 0);
		Shape1i.addBox(0F, 0F, 0F, 6, 2, 6);
		Shape1i.setRotationPoint(-8F, 24F, -8F);
		Shape1i.setTextureSize(128, 128);
		Shape1i.mirror = true;
		this.setRotation(Shape1i, 0F, 0F, 0F);
		Shape1j = new LODModelPart(this, 36, 9);
		Shape1j.addBox(0F, 0F, 0F, 6, 2, 6);
		Shape1j.setRotationPoint(2F, 24F, -8F);
		Shape1j.setTextureSize(128, 128);
		Shape1j.mirror = true;
		this.setRotation(Shape1j, 0F, 0F, 0F);
		Shape1k = new LODModelPart(this, 36, 18);
		Shape1k.addBox(0F, 0F, 0F, 6, 2, 6);
		Shape1k.setRotationPoint(2F, 24F, 2F);
		Shape1k.setTextureSize(128, 128);
		Shape1k.mirror = true;
		this.setRotation(Shape1k, 0F, 0F, 0F);
		Shape2 = new LODModelPart(this, 62, 0);
		Shape2.addBox(0F, 0F, 0F, 16, 1, 16);
		Shape2.setRotationPoint(-8F, 23F, -8F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape3 = new LODModelPart(this, 26, 53);
		Shape3.addBox(0F, 0F, 0F, 3, 3, 3);
		Shape3.setRotationPoint(4F, 18F, 4F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape3a = new LODModelPart(this, 0, 91);
		Shape3a.addBox(0F, 0F, 0F, 12, 1, 12);
		Shape3a.setRotationPoint(-6F, 15F, -6F);
		Shape3a.setTextureSize(128, 128);
		Shape3a.mirror = true;
		this.setRotation(Shape3a, 0F, 0F, 0F);
		Shape3b = new LODModelPart(this, 39, 53);
		Shape3b.addBox(0F, 0F, 0F, 3, 3, 3);
		Shape3b.setRotationPoint(-7F, 18F, 4F);
		Shape3b.setTextureSize(128, 128);
		Shape3b.mirror = true;
		this.setRotation(Shape3b, 0F, 0F, 0F);
		Shape3c = new LODModelPart(this, 13, 53);
		Shape3c.addBox(0F, 0F, 0F, 3, 3, 3);
		Shape3c.setRotationPoint(4F, 18F, -7F);
		Shape3c.setTextureSize(128, 128);
		Shape3c.mirror = true;
		this.setRotation(Shape3c, 0F, 0F, 0F);
		Shape3d = new LODModelPart(this, 0, 53);
		Shape3d.addBox(0F, 0F, 0F, 3, 3, 3);
		Shape3d.setRotationPoint(-7F, 18F, -7F);
		Shape3d.setTextureSize(128, 128);
		Shape3d.mirror = true;
		this.setRotation(Shape3d, 0F, 0F, 0F);
		Shape3e = new LODModelPart(this, 0, 36);
		Shape3e.addBox(0F, 0F, 0F, 14, 2, 14);
		Shape3e.setRotationPoint(-7F, 21F, -7F);
		Shape3e.setTextureSize(128, 128);
		Shape3e.mirror = true;
		this.setRotation(Shape3e, 0F, 0F, 0F);
		Shape3f = new LODModelPart(this, 0, 60);
		Shape3f.addBox(0F, 0F, 0F, 14, 1, 14);
		Shape3f.setRotationPoint(-7F, 17F, -7F);
		Shape3f.setTextureSize(128, 128);
		Shape3f.mirror = true;
		this.setRotation(Shape3f, 0F, 0F, 0F);
		Shape3g = new LODModelPart(this, 0, 76);
		Shape3g.addBox(0F, 0F, 0F, 13, 1, 13);
		Shape3g.setRotationPoint(-6.5F, 16F, -6.5F);
		Shape3g.setTextureSize(128, 128);
		Shape3g.mirror = true;
		this.setRotation(Shape3g, 0F, 0F, 0F);
		Shape4 = new LODModelPart(this, 0, 106);
		Shape4.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4.setRotationPoint(3.5F, 12F, 3.5F);
		Shape4.setTextureSize(128, 128);
		Shape4.mirror = true;
		this.setRotation(Shape4, 0F, 0F, 0F);
		Shape4a = new LODModelPart(this, 0, 106);
		Shape4a.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4a.setRotationPoint(-5.5F, 12F, 3.5F);
		Shape4a.setTextureSize(128, 128);
		Shape4a.mirror = true;
		this.setRotation(Shape4a, 0F, 0F, 0F);
		Shape4b = new LODModelPart(this, 0, 106);
		Shape4b.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4b.setRotationPoint(-2.5F, 12F, 3.5F);
		Shape4b.setTextureSize(128, 128);
		Shape4b.mirror = true;
		this.setRotation(Shape4b, 0F, 0F, 0F);
		Shape4c = new LODModelPart(this, 0, 106);
		Shape4c.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4c.setRotationPoint(0.5F, 12F, 3.5F);
		Shape4c.setTextureSize(128, 128);
		Shape4c.mirror = true;
		this.setRotation(Shape4c, 0F, 0F, 0F);
		Shape4d = new LODModelPart(this, 0, 106);
		Shape4d.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4d.setRotationPoint(3.5F, 12F, -2.5F);
		Shape4d.setTextureSize(128, 128);
		Shape4d.mirror = true;
		this.setRotation(Shape4d, 0F, 0F, 0F);
		Shape4e = new LODModelPart(this, 0, 106);
		Shape4e.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4e.setRotationPoint(3.5F, 12F, 0.5F);
		Shape4e.setTextureSize(128, 128);
		Shape4e.mirror = true;
		this.setRotation(Shape4e, 0F, 0F, 0F);
		Shape4f = new LODModelPart(this, 0, 106);
		Shape4f.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4f.setRotationPoint(0.5F, 12F, -5.5F);
		Shape4f.setTextureSize(128, 128);
		Shape4f.mirror = true;
		this.setRotation(Shape4f, 0F, 0F, 0F);
		Shape4g = new LODModelPart(this, 0, 106);
		Shape4g.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4g.setRotationPoint(0.5F, 12F, -2.5F);
		Shape4g.setTextureSize(128, 128);
		Shape4g.mirror = true;
		this.setRotation(Shape4g, 0F, 0F, 0F);
		Shape4h = new LODModelPart(this, 0, 106);
		Shape4h.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4h.setRotationPoint(0.5F, 12F, 0.5F);
		Shape4h.setTextureSize(128, 128);
		Shape4h.mirror = true;
		this.setRotation(Shape4h, 0F, 0F, 0F);
		Shape4i = new LODModelPart(this, 0, 106);
		Shape4i.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4i.setRotationPoint(-2.5F, 12F, -5.5F);
		Shape4i.setTextureSize(128, 128);
		Shape4i.mirror = true;
		this.setRotation(Shape4i, 0F, 0F, 0F);
		Shape4j = new LODModelPart(this, 0, 106);
		Shape4j.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4j.setRotationPoint(-2.5F, 12F, -2.5F);
		Shape4j.setTextureSize(128, 128);
		Shape4j.mirror = true;
		this.setRotation(Shape4j, 0F, 0F, 0F);
		Shape4k = new LODModelPart(this, 0, 106);
		Shape4k.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4k.setRotationPoint(-2.5F, 12F, 0.5F);
		Shape4k.setTextureSize(128, 128);
		Shape4k.mirror = true;
		this.setRotation(Shape4k, 0F, 0F, 0F);
		Shape4l = new LODModelPart(this, 0, 106);
		Shape4l.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4l.setRotationPoint(-5.5F, 12F, -5.5F);
		Shape4l.setTextureSize(128, 128);
		Shape4l.mirror = true;
		this.setRotation(Shape4l, 0F, 0F, 0F);
		Shape4m = new LODModelPart(this, 0, 106);
		Shape4m.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4m.setRotationPoint(-5.5F, 12F, -2.5F);
		Shape4m.setTextureSize(128, 128);
		Shape4m.mirror = true;
		this.setRotation(Shape4m, 0F, 0F, 0F);
		Shape4n = new LODModelPart(this, 0, 106);
		Shape4n.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4n.setRotationPoint(-5.5F, 12F, 0.5F);
		Shape4n.setTextureSize(128, 128);
		Shape4n.mirror = true;
		this.setRotation(Shape4n, 0F, 0F, 0F);
		Shape4o = new LODModelPart(this, 0, 106);
		Shape4o.addBox(0F, 0F, 0F, 2, 3, 2);
		Shape4o.setRotationPoint(3.5F, 12F, -5.5F);
		Shape4o.setTextureSize(128, 128);
		Shape4o.mirror = true;
		this.setRotation(Shape4o, 0F, 0F, 0F);
		Shape4p = new LODModelPart(this, 0, 112);
		Shape4p.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4p.setRotationPoint(-5F, 8F, 4F);
		Shape4p.setTextureSize(128, 128);
		Shape4p.mirror = true;
		this.setRotation(Shape4p, 0F, 0F, 0F);
		Shape4q = new LODModelPart(this, 0, 112);
		Shape4q.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4q.setRotationPoint(-5F, 8F, -5F);
		Shape4q.setTextureSize(128, 128);
		Shape4q.mirror = true;
		this.setRotation(Shape4q, 0F, 0F, 0F);
		Shape4r = new LODModelPart(this, 0, 112);
		Shape4r.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4r.setRotationPoint(-5F, 8F, -2F);
		Shape4r.setTextureSize(128, 128);
		Shape4r.mirror = true;
		this.setRotation(Shape4r, 0F, 0F, 0F);
		Shape4s = new LODModelPart(this, 0, 112);
		Shape4s.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4s.setRotationPoint(-5F, 8F, 1F);
		Shape4s.setTextureSize(128, 128);
		Shape4s.mirror = true;
		this.setRotation(Shape4s, 0F, 0F, 0F);
		Shape4t = new LODModelPart(this, 0, 112);
		Shape4t.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4t.setRotationPoint(4F, 8F, 4F);
		Shape4t.setTextureSize(128, 128);
		Shape4t.mirror = true;
		this.setRotation(Shape4t, 0F, 0F, 0F);
		Shape4u = new LODModelPart(this, 0, 112);
		Shape4u.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4u.setRotationPoint(1F, 8F, 4F);
		Shape4u.setTextureSize(128, 128);
		Shape4u.mirror = true;
		this.setRotation(Shape4u, 0F, 0F, 0F);
		Shape4v = new LODModelPart(this, 0, 112);
		Shape4v.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4v.setRotationPoint(-2F, 8F, 4F);
		Shape4v.setTextureSize(128, 128);
		Shape4v.mirror = true;
		this.setRotation(Shape4v, 0F, 0F, 0F);
		Shape4w = new LODModelPart(this, 0, 112);
		Shape4w.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4w.setRotationPoint(4F, 8F, 1F);
		Shape4w.setTextureSize(128, 128);
		Shape4w.mirror = true;
		this.setRotation(Shape4w, 0F, 0F, 0F);
		Shape4x = new LODModelPart(this, 0, 112);
		Shape4x.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4x.setRotationPoint(1F, 8F, 1F);
		Shape4x.setTextureSize(128, 128);
		Shape4x.mirror = true;
		this.setRotation(Shape4x, 0F, 0F, 0F);
		Shape4y = new LODModelPart(this, 0, 112);
		Shape4y.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4y.setRotationPoint(-2F, 8F, 1F);
		Shape4y.setTextureSize(128, 128);
		Shape4y.mirror = true;
		this.setRotation(Shape4y, 0F, 0F, 0F);
		Shape4z = new LODModelPart(this, 0, 112);
		Shape4z.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4z.setRotationPoint(4F, 8F, -2F);
		Shape4z.setTextureSize(128, 128);
		Shape4z.mirror = true;
		this.setRotation(Shape4z, 0F, 0F, 0F);
		Shape4aa = new LODModelPart(this, 0, 112);
		Shape4aa.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4aa.setRotationPoint(1F, 8F, -2F);
		Shape4aa.setTextureSize(128, 128);
		Shape4aa.mirror = true;
		this.setRotation(Shape4aa, 0F, 0F, 0F);
		Shape4ab = new LODModelPart(this, 0, 112);
		Shape4ab.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4ab.setRotationPoint(-2F, 8F, -2F);
		Shape4ab.setTextureSize(128, 128);
		Shape4ab.mirror = true;
		this.setRotation(Shape4ab, 0F, 0F, 0F);
		Shape4ac = new LODModelPart(this, 0, 112);
		Shape4ac.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4ac.setRotationPoint(4F, 8F, -5F);
		Shape4ac.setTextureSize(128, 128);
		Shape4ac.mirror = true;
		this.setRotation(Shape4ac, 0F, 0F, 0F);
		Shape4ad = new LODModelPart(this, 0, 112);
		Shape4ad.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4ad.setRotationPoint(1F, 8F, -5F);
		Shape4ad.setTextureSize(128, 128);
		Shape4ad.mirror = true;
		this.setRotation(Shape4ad, 0F, 0F, 0F);
		Shape4ae = new LODModelPart(this, 0, 112);
		Shape4ae.addBox(0F, 0F, 0F, 1, 4, 1);
		Shape4ae.setRotationPoint(-2F, 8F, -5F);
		Shape4ae.setTextureSize(128, 128);
		Shape4ae.mirror = true;
		this.setRotation(Shape4ae, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(TileEntity te, ArrayList li)
	{
		if ((Boolean)li.get(0)) {
			Shape1.render(te, f5);
			Shape1a.render(te, f5);
			Shape1b.render(te, f5);
			Shape1d.render(te, f5);
			Shape1c.render(te, f5);
			Shape1e.render(te, f5);
			Shape1f.render(te, f5);
			Shape1g.render(te, f5);
			Shape1h.render(te, f5);
			Shape1i.render(te, f5);
			Shape1j.render(te, f5);
			Shape1k.render(te, f5);
		}

		Shape2.render(te, f5);
		Shape3.render(te, f5);
		Shape3a.render(te, f5);
		Shape3b.render(te, f5);
		Shape3c.render(te, f5);
		Shape3d.render(te, f5);
		Shape3e.render(te, f5);
		Shape3f.render(te, f5);
		Shape3g.render(te, f5);
		Shape4.render(te, f5);
		Shape4a.render(te, f5);
		Shape4b.render(te, f5);
		Shape4c.render(te, f5);
		Shape4d.render(te, f5);
		Shape4e.render(te, f5);
		Shape4f.render(te, f5);
		Shape4g.render(te, f5);
		Shape4h.render(te, f5);
		Shape4i.render(te, f5);
		Shape4j.render(te, f5);
		Shape4k.render(te, f5);
		Shape4l.render(te, f5);
		Shape4m.render(te, f5);
		Shape4n.render(te, f5);
		Shape4o.render(te, f5);
		Shape4p.render(te, f5);
		Shape4q.render(te, f5);
		Shape4r.render(te, f5);
		Shape4s.render(te, f5);
		Shape4t.render(te, f5);
		Shape4u.render(te, f5);
		Shape4v.render(te, f5);
		Shape4w.render(te, f5);
		Shape4x.render(te, f5);
		Shape4y.render(te, f5);
		Shape4z.render(te, f5);
		Shape4aa.render(te, f5);
		Shape4ab.render(te, f5);
		Shape4ac.render(te, f5);
		Shape4ad.render(te, f5);
		Shape4ae.render(te, f5);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5);
	}

}
