/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2017
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 09/05/2017 6:34:33 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package Reika.ChromatiCraft.Models;

import java.util.ArrayList;

import net.minecraft.tileentity.TileEntity;

import Reika.ChromatiCraft.Base.ChromaModelBase;
import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;

public class ModelWaterLock extends ChromaModelBase
{
	//fields
	LODModelPart r1;
	LODModelPart r2;
	LODModelPart r3;
	LODModelPart r4;
	LODModelPart r5;
	LODModelPart r6;
	LODModelPart r7;
	LODModelPart r8;
	LODModelPart r9;
	LODModelPart r10;
	LODModelPart r11;
	LODModelPart r12;
	LODModelPart r13;
	LODModelPart r14;
	LODModelPart r15;
	LODModelPart r16;
	LODModelPart r17;
	LODModelPart r18;
	LODModelPart r19;
	LODModelPart ch1;

	public ModelWaterLock()
	{
		textureWidth = 128;
		textureHeight = 256;

		r1 = new LODModelPart(this, 27, 194);
		r1.addBox(46F, 0F, -4.5F, 1, 16, 8);
		r1.setRotationPoint(0F, 8F, 0F);
		r1.setTextureSize(128, 256);
		r1.mirror = true;
		this.setRotation(r1, 0F, -0.8028515F, 0F);
		r2 = new LODModelPart(this, 0, 163);
		r2.addBox(21F, 0F, 9F, 18, 1, 13);
		r2.setRotationPoint(0F, 8F, 0F);
		r2.setTextureSize(128, 256);
		r2.mirror = true;
		this.setRotation(r2, 0F, 0F, 0F);
		r3 = new LODModelPart(this, 0, 49);
		r3.addBox(9F, 0F, 8F, 31, 16, 1);
		r3.setRotationPoint(0F, 8F, 0F);
		r3.setTextureSize(128, 256);
		r3.mirror = true;
		this.setRotation(r3, 0F, 0F, 0F);
		r4 = new LODModelPart(this, 68, 33);
		r4.addBox(9F, 0F, 39F, 11, 16, 1);
		r4.setRotationPoint(0F, 8F, 0F);
		r4.setTextureSize(128, 256);
		r4.mirror = true;
		this.setRotation(r4, 0F, 0F, 0F);
		r5 = new LODModelPart(this, 68, 51);
		r5.addBox(39F, 0F, 9F, 1, 16, 11);
		r5.setRotationPoint(0F, 8F, 0F);
		r5.setTextureSize(128, 256);
		r5.mirror = true;
		this.setRotation(r5, 0F, 0F, 0F);
		r6 = new LODModelPart(this, 0, 194);
		r6.addBox(43.5F, 0F, 4.5F, 1, 16, 11);
		r6.setRotationPoint(0F, 8F, 0F);
		r6.setTextureSize(128, 256);
		r6.mirror = true;
		this.setRotation(r6, 0F, -0.3665191F, 0F);
		r7 = new LODModelPart(this, 48, 194);
		r7.addBox(43.5F, 0F, -16F, 1, 16, 11);
		r7.setRotationPoint(0F, 8F, 0F);
		r7.setTextureSize(128, 256);
		r7.mirror = true;
		this.setRotation(r7, 0F, -1.22173F, 0F);
		r8 = new LODModelPart(this, 0, 0);
		r8.addBox(8F, 0F, 8F, 1, 16, 32);
		r8.setRotationPoint(0F, 8F, 0F);
		r8.setTextureSize(128, 256);
		r8.mirror = true;
		this.setRotation(r8, 0F, 0F, 0F);
		r9 = new LODModelPart(this, 55, 181);
		r9.addBox(33F, 0F, 30F, 2, 1, 2);
		r9.setRotationPoint(0F, 8F, 0F);
		r9.setTextureSize(128, 256);
		r9.mirror = true;
		this.setRotation(r9, 0F, 0F, 0F);
		r10 = new LODModelPart(this, 0, 130);
		r10.addBox(9F, 0F, 9F, 12, 1, 30);
		r10.setRotationPoint(0F, 8F, 0F);
		r10.setTextureSize(128, 256);
		r10.mirror = true;
		this.setRotation(r10, 0F, 0F, 0F);
		r11 = new LODModelPart(this, 68, 26);
		r11.addBox(29F, 0F, 34F, 2, 1, 2);
		r11.setRotationPoint(0F, 8F, 0F);
		r11.setTextureSize(128, 256);
		r11.mirror = true;
		this.setRotation(r11, 0F, 0F, 0F);
		r12 = new LODModelPart(this, 65, 163);
		r12.addBox(33F, 0F, 22F, 5, 1, 3);
		r12.setRotationPoint(0F, 8F, 0F);
		r12.setTextureSize(128, 256);
		r12.mirror = true;
		this.setRotation(r12, 0F, 0F, 0F);
		r13 = new LODModelPart(this, 65, 170);
		r13.addBox(33F, 0F, 25F, 4, 1, 3);
		r13.setRotationPoint(0F, 8F, 0F);
		r13.setTextureSize(128, 256);
		r13.mirror = true;
		this.setRotation(r13, 0F, 0F, 0F);
		r14 = new LODModelPart(this, 66, 180);
		r14.addBox(33F, 0F, 28F, 3, 1, 2);
		r14.setRotationPoint(0F, 8F, 0F);
		r14.setTextureSize(128, 256);
		r14.mirror = true;
		this.setRotation(r14, 0F, 0F, 0F);
		r15 = new LODModelPart(this, 0, 179);
		r15.addBox(21F, 0F, 22F, 12, 1, 11);
		r15.setRotationPoint(0F, 8F, 0F);
		r15.setTextureSize(128, 256);
		r15.mirror = true;
		this.setRotation(r15, 0F, 0F, 0F);
		r16 = new LODModelPart(this, 68, 0);
		r16.addBox(21F, 0F, 33F, 2, 1, 6);
		r16.setRotationPoint(0F, 8F, 0F);
		r16.setTextureSize(128, 256);
		r16.mirror = true;
		this.setRotation(r16, 0F, 0F, 0F);
		r17 = new LODModelPart(this, 68, 9);
		r17.addBox(23F, 0F, 33F, 3, 1, 5);
		r17.setRotationPoint(0F, 8F, 0F);
		r17.setTextureSize(128, 256);
		r17.mirror = true;
		this.setRotation(r17, 0F, 0F, 0F);
		r18 = new LODModelPart(this, 68, 18);
		r18.addBox(26F, 0F, 33F, 3, 1, 4);
		r18.setRotationPoint(0F, 8F, 0F);
		r18.setTextureSize(128, 256);
		r18.mirror = true;
		this.setRotation(r18, 0F, 0F, 0F);
		r19 = new LODModelPart(this, 78, 27);
		r19.addBox(29F, 0F, 33F, 3, 1, 1);
		r19.setRotationPoint(0F, 8F, 0F);
		r19.setTextureSize(128, 256);
		r19.mirror = true;
		this.setRotation(r19, 0F, 0F, 0F);
		ch1 = new LODModelPart(this, 0, 80);
		ch1.addBox(-8F, 0F, 8F, 16, 16, 32);
		ch1.setRotationPoint(0F, 8F, 0F);
		ch1.setTextureSize(128, 256);
		ch1.mirror = true;
		this.setRotation(ch1, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(TileEntity te, ArrayList li) {
		this.renderSegment(te);
		this.renderChannel(te);
	}

	public void renderChannel(TileEntity te) {
		ch1.render(te, f5);
	}

	public void renderSegment(TileEntity te) {
		r1.render(te, f5);
		r2.render(te, f5);
		r3.render(te, f5);
		r4.render(te, f5);
		r5.render(te, f5);
		r6.render(te, f5);
		r7.render(te, f5);
		r8.render(te, f5);
		r9.render(te, f5);
		r10.render(te, f5);
		r11.render(te, f5);
		r12.render(te, f5);
		r13.render(te, f5);
		r14.render(te, f5);
		r15.render(te, f5);
		r16.render(te, f5);
		r17.render(te, f5);
		r18.render(te, f5);
		r19.render(te, f5);
	}

}
